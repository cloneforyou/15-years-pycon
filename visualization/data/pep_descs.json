{
 "239": "Adding a Rational Type to Python",
 "316": "Programming by Contract for Python",
 "468": "Preserving the order of \\*\\*kwargs in a function.",
 "213": "Attribute Access Handlers",
 "288": "Generators Attributes and Exceptions",
 "3130": "Access to Current Module/Class/Function",
 "217": "Display Hook for Interactive Use",
 "494": "Python 3.6 Release Schedule",
 "552": "Deterministic pycs",
 "244": "The ``directive`` statement",
 "516": "Build system abstraction for pip/conda etc",
 "458": "Surviving a Compromise of PyPI",
 "343": "The \"with\" Statement",
 "329": "Treating Builtins as Constants in the Standard Library",
 "399": "Pure Python/C Accelerator Module Compatibility ...",
 "422": "Simpler customisation of class creation",
 "467": "Minor API improvements for binary sequences",
 "207": "Rich Comparisons",
 "418": "Add monotonic time, performance counter, and ...",
 "220": "Coroutines, Generators, Continuations",
 "477": "Backport ensurepip (PEP 453) to Python 2.7",
 "510": "Specialize functions with guards",
 "345": "Metadata for Python Software Packages 1.2",
 "565": "Show DeprecationWarning in __main__",
 "3141": "A Type Hierarchy for Numbers",
 "527": "Removing Un(der)used file types/extensions on PyPI",
 "558": "Defined semantics for locals()",
 "245": "Python Interface Syntax",
 "337": "Logging Usage in the Standard Library",
 "379": "Adding an Assignment Expression",
 "376": "Database of Installed Python Distributions",
 "532": "A circuit breaking protocol and binary operators",
 "559": "Built-in noop()",
 "277": "Unicode file name support for Windows NT",
 "279": "The enumerate() built-in function",
 "3115": "Metaclasses in Python 3000",
 "103": "Collecting information about git",
 "210": "Decoupling the Interpreter Loop",
 "535": "Rich comparison chaining",
 "504": "Using the System RNG by default",
 "309": "Partial Function Application",
 "301": "Package Index and Metadata for Distutils",
 "273": "Import Modules from Zip Archives",
 "275": "Switching on Multiple Values",
 "3114": "Renaming iterator.next() to iterator.__next__()",
 "476": "Enabling certificate verification by default for ...",
 "227": "Statically Nested Scopes",
 "375": "Python 3.1 Release Schedule",
 "482": "Literature Overview for Type Hints",
 "211": "Adding A New Outer Product Operator",
 "253": "Subtyping Built-in Types",
 "268": "Extended HTTP functionality and WebDAV",
 "395": "Qualified Names for Modules",
 "3155": "Qualified name for classes and functions",
 "3122": "Delineation of the main module",
 "255": "Simple Generators",
 "236": "Back to the __future__",
 "281": "Loop Counter Iteration with range and xrange",
 "305": "CSV File API",
 "263": "Defining Python Source Code Encodings",
 "261": "Support for \"wide\" Unicode characters",
 "292": "Simpler String Substitutions",
 "251": "Python 2.2 Release Schedule",
 "503": "Simple Repository API",
 "352": "Required Superclass for Exceptions",
 "412": "Key-Sharing Dictionary",
 "437": "A DSL for specifying signatures, annotations and ...",
 "334": "Simple Coroutines via SuspendIteration",
 "408": "Standard library __preview__ package",
 "539": "A New C-API for Thread-Local Storage in CPython",
 "310": "Reliable Acquisition/Release Pairs",
 "296": "Adding a bytes Object Type",
 "160": "Python 1.6 Release Schedule",
 "546": "Backport ssl.MemoryBIO and ssl.SSLObject to Python 2.7",
 "225": "Elementwise/Objectwise Operators",
 "231": "__findattr__()",
 "563": "Postponed Evaluation of Annotations",
 "488": "Elimination of PYO files",
 "419": "Protecting cleanup statements from interruptions",
 "3117": "Postfix type declarations",
 "472": "Support for indexing with keyword arguments",
 "426": "Metadata for Python Software Packages 2.0",
 "383": "Non-decodable Bytes in System Character Interfaces",
 "315": "Enhanced While Loop",
 "754": "IEEE 754 Floating Point Special Values",
 "506": "Adding A Secrets Module To The Standard Library",
 "421": "Adding sys.implementation",
 "543": "A Unified TLS API for Python",
 "322": "Reverse Iteration",
 "314": "Metadata for Python Software Packages v1.1",
 "266": "Optimizing Global Variable/Attribute Access",
 "515": "Underscores in Numeric Literals",
 "566": "Metadata for Python Software Packages 2.1",
 "557": "Data Classes",
 "505": "None-aware operators",
 "548": "More Flexible Loop Control",
 "3147": "PYC Repository Directories",
 "3143": "Standard daemon process library",
 "509": "Add a private version to dict",
 "555": "Context-local variables (contextvars)",
 "524": "Make os.urandom() blocking on Linux",
 "274": "Dict Comprehensions",
 "10": "Voting Guidelines",
 "204": "Range Literals",
 "3111": "Simple input built-in in Python 3000",
 "538": "Coercing the legacy C locale to a UTF-8 based locale",
 "384": "Defining a Stable ABI",
 "492": "Coroutines with async and await syntax",
 "401": "BDFL Retirement",
 "11": "Removing support for little used platforms",
 "3127": "Integer Literal Support and Syntax",
 "3109": "Raising Exceptions in Python 3000",
 "391": "Dictionary-Based Configuration For Logging",
 "370": "Per user site-packages directory",
 "250": "Using site-packages on Windows",
 "374": "Choosing a distributed VCS for the Python project",
 "216": "Docstring Format",
 "243": "Module Repository Upload Mechanism",
 "201": "Lockstep Iteration",
 "478": "Python 3.5 Release Schedule",
 "425": "Compatibility Tags for Built Distributions",
 "3145": "Asynchronous I/O For subprocess.Popen",
 "357": "Allowing Any Object to be Used for Slicing",
 "350": "Codetags",
 "3101": "Advanced String Formatting",
 "454": "Add a new tracemalloc module to trace Python memory ...",
 "320": "Python 2.4 Release Schedule",
 "3149": "ABI version tagged .so files",
 "3151": "Reworking the OS and IO exception hierarchy",
 "567": "Context Variables",
 "222": "Web Library Enhancements",
 "3104": "Access to Names in Outer Scopes",
 "502": "String Interpolation - Extended Discussion",
 "318": "Decorators for Functions and Methods",
 "332": "Byte vectors and String/Unicode Unification",
 "3106": "Revamping dict.keys(), .values() and .items()",
 "541": "Package Index Name Retention",
 "480": "Surviving a Compromise of PyPI: The Maximum ...",
 "3333": "Python Web Server Gateway Interface v1.0.1",
 "347": "Migrating the Python CVS to Subversion",
 "9": "Sample Plaintext PEP Template",
 "517": "A build-system independent format for source trees",
 "511": "API for code transformers",
 "3105": "Make print a function",
 "448": "Additional Unpacking Generalizations",
 "283": "Python 2.3 Release Schedule",
 "270": "uniq method for list objects",
 "445": "Add new APIs to customize Python memory allocators",
 "380": "Syntax for Delegating to a Subgenerator",
 "417": "Including mock in the Standard Library",
 "497": "A standard mechanism for backward compatibility",
 "240": "Adding a Rational Literal to Python",
 "342": "Coroutines via Enhanced Generators",
 "518": "Specifying Minimum Build System Requirements for ...",
 "403": "General purpose decorator clause (aka \"@in\" clause)",
 "416": "Add a frozendict builtin type",
 "8": "Style Guide for Python Code",
 "490": "Chain exceptions at C level",
 "429": "Python 3.4 Release Schedule",
 "475": "Retry system calls failing with EINTR",
 "382": "Namespace Packages",
 "303": "Extend divmod() for Multiple Divisors",
 "465": "A dedicated infix operator for matrix multiplication",
 "20": "The Zen of Python",
 "254": "Making Classes Look More Like Types",
 "3001": "Procedure for reviewing and improving standard ...",
 "3102": "Keyword-Only Arguments",
 "479": "Change StopIteration handling inside generators",
 "3119": "Introducing Abstract Base Classes",
 "397": "Python launcher for Windows",
 "237": "Unifying Long Integers and Integers",
 "219": "Stackless Python",
 "443": "Single-dispatch generic functions",
 "358": "The \"bytes\" Object",
 "469": "Migration of dict iteration code to Python 3",
 "3152": "Cofunctions",
 "363": "Syntax For Dynamic Attribute Access",
 "262": "A Database of Installed Python Packages",
 "330": "Python Bytecode Verification",
 "431": "Time zone support improvements",
 "3120": "Using UTF-8 as the default source encoding",
 "450": "Adding A Statistics Module To The Standard Library",
 "224": "Attribute Docstrings",
 "562": "Module __getattr__ and __dir__",
 "449": "Removal of the PyPI Mirror Auto Discovery and ...",
 "290": "Code Migration and Modernization",
 "406": "Improved Encapsulation of Import State",
 "3123": "Making PyObject_HEAD conform to standard C",
 "302": "New Import Hooks",
 "451": "A ModuleSpec Type for the Import System",
 "203": "Augmented Assignments",
 "409": "Suppressing exception context",
 "435": "Adding an Enum type to the Python standard library",
 "272": "API for Block Encryption Algorithms v1.0",
 "389": "argparse - New Command Line Parsing Module",
 "3003": "Python Language Moratorium",
 "508": "Dependency specification for Python Software Packages",
 "3150": "Statement local namespaces (aka \"given\" clause)",
 "3148": "futures - execute computations asynchronously",
 "568": "Generator-sensitivity for Context Variables",
 "387": "Backwards Compatibility Policy",
 "278": "Universal Newline Support",
 "218": "Adding a Built-In Set Object Type",
 "206": "Python Advanced Library",
 "252": "Making Types Look More Like Classes",
 "3100": "Miscellaneous Python 3.0 Plans",
 "241": "Metadata for Python Software Packages",
 "248": "Python Database API Specification v1.0",
 "3146": "Merging Unladen Swallow into CPython",
 "321": "Date/Time Parsing and Formatting",
 "537": "Python 3.7 Release Schedule",
 "202": "List Comprehensions",
 "209": "Multi-dimensional Arrays",
 "438": "Transitioning to release-file hosting on PyPI",
 "326": "A Case for Top and Bottom Values",
 "441": "Improving Python ZIP Application Support",
 "365": "Adding the pkg_resources module",
 "3129": "Class Decorators",
 "354": "Enumerations in Python",
 "3002": "Procedure for Backwards-Incompatible Changes",
 "474": "Creating forge.python.org",
 "423": "Naming conventions and recipes related to packaging",
 "495": "Local Time Disambiguation",
 "536": "Final Grammar for Literal String Interpolation",
 "369": "Post import hooks",
 "396": "Module Version Numbers",
 "5": "Guidelines for Language Evolution",
 "317": "Eliminate Implicit Exception Instantiation",
 "434": "IDLE Enhancement Exception for All Branches",
 "436": "The Argument Clinic DSL",
 "223": "Change the Meaning of ``\\x`` Escapes",
 "372": "Adding an ordered dictionary to collections",
 "3142": "Add a \"while\" clause to generator expressions",
 "229": "Using Distutils to Build Python",
 "307": "Extensions to the pickle protocol",
 "260": "Simplify xrange()",
 "3153": "Asynchronous IO support",
 "3134": "Exception Chaining and Embedded Tracebacks",
 "221": "Import As",
 "3121": "Extension Module Initialization and Finalization",
 "3124": "Overloading, Generic Functions, Interfaces, and ...",
 "249": "Python Database API Specification v2.0",
 "319": "Python Synchronize/Asynchronize Block",
 "351": "The freeze protocol",
 "540": "Add a new UTF-8 Mode",
 "531": "Existence checking operators",
 "212": "Loop Counter Iteration",
 "366": "Main module explicit relative imports",
 "433": "Easier suppression of file descriptor inheritance",
 "264": "Future statements in simulated shells",
 "247": "API for Cryptographic Hash Functions",
 "346": "User Defined (\"``with``\") Statements",
 "405": "Python Virtual Environments",
 "3136": "Labeled break and continue",
 "258": "Docutils Design Specification",
 "228": "Reworking Python's Numeric Model",
 "373": "Python 2.7 Release Schedule",
 "3": "Guidelines for Handling Bug Reports",
 "3156": "Asynchronous IO Support Rebooted: the \"asyncio\" Module",
 "348": "Exception Reorganization for Python 3.0",
 "528": "Change Windows console encoding to UTF-8",
 "464": "Removal of the PyPI Mirror Authenticity API",
 "286": "Enhanced Argument Tuples",
 "349": "Allow str() to return unicode strings",
 "3131": "Supporting Non-ASCII Identifiers",
 "3113": "Removal of Tuple Parameter Unpacking",
 "551": "Security transparency in the Python runtime",
 "414": "Explicit Unicode Literal for Python 3.3",
 "293": "Codec Error Handling Callbacks",
 "394": "The \"python\" Command on Unix-Like Systems",
 "233": "Python Online Help",
 "242": "Numeric Kinds",
 "102": "Doing Python Micro Releases",
 "560": "Core support for typing module and generic types",
 "42": "Feature Requests",
 "234": "Iterators",
 "628": "Add ``math.tau``",
 "561": "Distributing and Packaging Type Information",
 "457": "Syntax For Positional-Only Parameters",
 "442": "Safe object finalization",
 "3140": "str(container) should call str(item), not repr(item)",
 "525": "Asynchronous Generators",
 "276": "Simple Iterator for ints",
 "313": "Adding Roman Numeral Literals to Python",
 "413": "Faster evolution of the Python Standard Library",
 "3103": "A Switch/Case Statement",
 "3138": "String representation in Python 3000",
 "269": "Pgen Module for Python",
 "381": "Mirroring infrastructure for PyPI",
 "304": "Controlling Generation of Bytecode Files",
 "3099": "Things that will Not Change in Python 3000",
 "335": "Overloadable Boolean Operators",
 "523": "Adding a frame evaluation API to CPython",
 "550": "Execution Context",
 "3137": "Immutable Bytes and Mutable Buffer",
 "1": "PEP Purpose and Guidelines",
 "377": "Allow __enter__() methods to skip the statement body",
 "440": "Version Identification and Dependency Specification",
 "432": "Restructuring the CPython startup sequence",
 "459": "Standard Metadata Extensions for Python Software ...",
 "446": "Make newly created file descriptors non-inheritable",
 "3118": "Revising the buffer protocol",
 "521": "Managing global context via 'with' blocks in ...",
 "341": "Unifying try-except and try-finally",
 "3108": "Standard Library Reorganization",
 "3110": "Catching Exceptions in Python 3000",
 "507": "Migrate CPython to Git and GitLab",
 "4": "Deprecation of Standard Modules",
 "489": "Multi-phase extension module initialization",
 "570": "Python Positional-Only Parameters",
 "259": "Omit printing newline after newline",
 "512": "Migrating from hg.python.org to GitHub",
 "473": "Adding structured data to built-in exceptions",
 "6": "Bug Fix Releases",
 "214": "Extended Print Statement",
 "404": "Python 2.8 Un-release Schedule",
 "390": "Static metadata for Distutils",
 "101": "Doing Python Releases 101",
 "367": "New Super",
 "306": "How to Change Python's Grammar",
 "491": "The Wheel Binary Package Format 1.9",
 "3133": "Introducing Roles",
 "299": "Special __main__() function in modules",
 "294": "Type Names in the types Module",
 "3000": "Python 3000",
 "493": "HTTPS verification migration tools for Python 2.7",
 "530": "Asynchronous Comprehensions",
 "3107": "Function Annotations",
 "368": "Standard image protocol and class",
 "554": "Multiple Interpreters in the Stdlib",
 "430": "Migrating to Python 3 as the default online ...",
 "526": "Syntax for Variable Annotations",
 "282": "A Logging System",
 "514": "Python registration in the Windows registry",
 "356": "Python 2.5 Release Schedule",
 "284": "Integer for-loops",
 "534": "Distributing a Subset of the Standard Library",
 "544": "Protocols: Structural subtyping (static duck typing)",
 "542": "Dot Notation Assignment In Function Header",
 "666": "Reject Foolish Indentation",
 "267": "Optimized Access to Module Namespaces",
 "533": "Deterministic cleanup for iterators",
 "359": "The \"make\" Statement",
 "235": "Import on Case-Insensitive Platforms",
 "439": "Inclusion of implicit pip bootstrap in Python ...",
 "456": "Secure and interchangeable hash algorithm",
 "355": "Path - Object oriented filesystem paths",
 "325": "Resource-Release Support for Generators",
 "344": "Exception Chaining and Embedded Tracebacks",
 "285": "Adding a bool type",
 "549": "Instance Descriptors",
 "402": "Simplified Package Layout and Partitioning",
 "100": "Python Unicode Integration",
 "215": "String Interpolation",
 "3132": "Extended Iterable Unpacking",
 "547": "Running extension modules using the -m option",
 "327": "Decimal Data Type",
 "410": "Use decimal.Decimal type for timestamps",
 "571": "The manylinux2 Platform Tag",
 "3135": "New Super",
 "324": "subprocess - New process module",
 "485": "A Function for testing approximate equality",
 "462": "Core development workflow automation for CPython",
 "378": "Format Specifier for Thousands Separator",
 "420": "Implicit Namespace Packages",
 "460": "Add binary interpolation and formatting",
 "12": "Sample reStructuredText PEP Template",
 "371": "Addition of the multiprocessing package to the ...",
 "564": "Add new time functions with nanosecond resolution",
 "265": "Sorting Dictionaries by Value",
 "298": "The Locked Buffer Interface",
 "295": "Interpretation of multiline string constants",
 "340": "Anonymous Block Statements",
 "323": "Copyable Iterators",
 "238": "Changing the Division Operator",
 "415": "Implement context suppression with exception attributes",
 "311": "Simplified Global Interpreter Lock Acquisition for ...",
 "461": "Adding % formatting to bytes and bytearray",
 "2": "Procedure for Adding New Modules",
 "501": "General purpose string interpolation",
 "496": "Environment Markers",
 "545": "Python Documentation Translations",
 "455": "Adding a key-transforming dictionary to collections",
 "522": "Allow BlockingIOError in security sensitive APIs",
 "208": "Reworking the Coercion Model",
 "398": "Python 3.3 Release Schedule",
 "257": "Docstring Conventions",
 "3116": "New I/O",
 "499": "``python -m foo`` should bind ...",
 "386": "Changing the version comparison module in Distutils",
 "529": "Change Windows filesystem encoding to UTF-8",
 "513": "A Platform Tag for Portable Linux Built Distributions",
 "312": "Simple Implicit Lambda",
 "226": "Python 2.1 Release Schedule",
 "411": "Provisional packages in the Python standard library",
 "453": "Explicit bootstrapping of pip in Python installations",
 "470": "Removing External Hosting Support on PyPI",
 "519": "Adding a file system path protocol",
 "271": "Prefixing sys.path by command line option",
 "466": "Network Security Enhancements for Python 2.7.x",
 "427": "The Wheel Binary Package Format 1.0",
 "3144": "IP Address Manipulation Library for the Python ...",
 "400": "Deprecate codecs.StreamReader and codecs.StreamWriter",
 "447": "Add __getdescriptor__ method to metaclass",
 "360": "Externally Maintained Packages",
 "498": "Literal String Interpolation",
 "3154": "Pickle protocol version 4",
 "328": "Imports: Multi-Line and Absolute/Relative",
 "338": "Executing modules as scripts",
 "385": "Migrating from Subversion to Mercurial",
 "556": "Threaded garbage collection",
 "287": "reStructuredText Docstring Format",
 "200": "Python 2.0 Release Schedule",
 "3128": "BList: A Faster List-like Type",
 "362": "Function Signature Object",
 "339": "Design of the CPython Compiler",
 "297": "Support for System Upgrades",
 "256": "Docstring Processing System Framework",
 "353": "Using ssize_t as the index type",
 "500": "A protocol for delegating datetime methods to their ...",
 "364": "Transitioning to the Py3K Standard Library",
 "308": "Conditional Expressions",
 "569": "Python 3.8 Release Schedule",
 "428": "The pathlib module -- object-oriented filesystem paths",
 "3125": "Remove Backslash Continuation",
 "331": "Locale-Independent Float/String Conversions",
 "483": "The Theory of Type Hints",
 "520": "Preserving Class Attribute Definition Order",
 "336": "Make None Callable",
 "553": "Built-in breakpoint()",
 "3112": "Bytes literals in Python 3000",
 "361": "Python 2.6 and 3.0 Release Schedule",
 "393": "Flexible String Representation",
 "291": "Backward Compatibility for the Python 2 Standard ...",
 "280": "Optimizing access to globals",
 "444": "Python Web3 Interface",
 "407": "New release cycle and introducing long-term support ...",
 "333": "Python Web Server Gateway Interface v1.0",
 "463": "Exception-catching expressions",
 "424": "A method for exposing a length hint",
 "452": "API for Cryptographic Hash Functions v2.0",
 "392": "Python 3.2 Release Schedule",
 "3126": "Remove Implicit String Concatenation",
 "487": "Simpler customisation of class creation",
 "481": "Migrate CPython to Git, Github, and Phabricator",
 "486": "Make the Python Launcher aware of virtual environments",
 "205": "Weak References",
 "230": "Warning Framework",
 "7": "Style Guide for C Code",
 "471": "os.scandir() function -- a better and faster ...",
 "232": "Function Attributes",
 "246": "Object Adaptation",
 "484": "Type Hints",
 "3139": "Cleaning out sys and the \"interpreter\" module",
 "289": "Generator Expressions"
}
